{"ast":null,"code":"var _jsxFileName = \"/Users/brendanlo/Documents/GitHub/gns-astronomy/src/components/NebulaEffect.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CanvasContainer = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  z-index: -3;\n`;\n_c = CanvasContainer;\nconst NebulaEffect = ({\n  pathname\n}) => {\n  _s();\n  // Only show on home page\n  const isHomePage = pathname === '/' || !pathname;\n  const canvasRef = useRef(null);\n  const animationFrameId = useRef(null);\n  const mousePosition = useRef({\n    x: 0,\n    y: 0\n  });\n  useEffect(() => {\n    if (!isHomePage) return; // Don't run effect on other pages\n\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    let width = window.innerWidth;\n    let height = window.innerHeight;\n\n    // Set canvas dimensions\n    canvas.width = width;\n    canvas.height = height;\n\n    // Nebula cloud class - reverted to triangular shape but with reduced brightness\n    class NebulaCloud {\n      constructor(x, y, radius, color, speed) {\n        this.x = x;\n        this.y = y;\n        this.radius = radius;\n        this.baseRadius = radius;\n        this.color = color;\n        this.speed = speed;\n        this.angle = Math.random() * Math.PI * 2;\n        this.noiseOffset = Math.random() * 1000;\n        this.noiseSpeed = Math.random() * 0.005 + 0.001;\n        this.opacity = Math.random() * 0.08 + 0.02; // Further reduced opacity\n        this.pulseSpeed = Math.random() * 0.02 + 0.01;\n        this.pulsePhase = Math.random() * Math.PI * 2;\n        // Restored distortion properties but with reduced values\n        this.distortionAmount = Math.random() * 10 + 5; // Reduced from 20+10\n        this.distortionSpeed = Math.random() * 0.01 + 0.005;\n        this.distortionPhase = Math.random() * Math.PI * 2;\n        this.hue = parseInt(color.split('(')[1].split(',')[0]);\n        this.hueShift = Math.random() * 0.5 + 0.1;\n        this.hueDirection = Math.random() > 0.5 ? 1 : -1;\n      }\n      update(mouseX, mouseY) {\n        // Subtle movement\n        this.x += Math.cos(this.angle) * this.speed;\n        this.y += Math.sin(this.angle) * this.speed;\n\n        // Change direction with noise\n        this.noiseOffset += this.noiseSpeed;\n        this.angle += Math.sin(this.noiseOffset) * 0.05;\n\n        // Keep within bounds\n        if (this.x < -this.radius) this.x = width + this.radius;\n        if (this.x > width + this.radius) this.x = -this.radius;\n        if (this.y < -this.radius) this.y = height + this.radius;\n        if (this.y > height + this.radius) this.y = -this.radius;\n\n        // Pulse effect\n        this.pulsePhase += this.pulseSpeed;\n        const pulseFactor = 0.5 + Math.sin(this.pulsePhase) * 0.5;\n        this.radius = this.baseRadius * (0.8 + pulseFactor * 0.4);\n        this.opacity = Math.random() * 0.02 + 0.02 + pulseFactor * 0.04; // Further reduced opacity\n\n        // Distortion phase\n        this.distortionPhase += this.distortionSpeed;\n\n        // Color shifting\n        this.hue += this.hueShift * this.hueDirection;\n        if (this.hue > 360) this.hue = 0;\n        if (this.hue < 0) this.hue = 360;\n\n        // Mouse interaction - gentle attraction\n        if (mouseX && mouseY) {\n          const dx = mouseX - this.x;\n          const dy = mouseY - this.y;\n          const distance = Math.sqrt(dx * dx + dy * dy);\n          if (distance < 300) {\n            const force = (300 - distance) / 10000;\n            this.x += dx * force;\n            this.y += dy * force;\n          }\n        }\n      }\n      draw(ctx) {\n        ctx.save();\n\n        // Create distorted shape (triangular with rounded corners)\n        ctx.beginPath();\n        for (let i = 0; i < 20; i++) {\n          const angle = i / 20 * Math.PI * 2;\n          const distortedRadius = this.radius + Math.sin(angle * 3 + this.distortionPhase) * this.distortionAmount;\n          const x = this.x + Math.cos(angle) * distortedRadius;\n          const y = this.y + Math.sin(angle) * distortedRadius;\n          if (i === 0) {\n            ctx.moveTo(x, y);\n          } else {\n            ctx.lineTo(x, y);\n          }\n        }\n        ctx.closePath();\n\n        // Create gradient with reduced brightness\n        const gradient = ctx.createRadialGradient(this.x, this.y, 0, this.x, this.y, this.radius * 1.5);\n\n        // Reduced saturation and lightness for better text readability\n        const color = `hsla(${this.hue}, 80%, 60%, ${this.opacity})`;\n        const transparentColor = `hsla(${this.hue}, 80%, 60%, 0)`;\n        gradient.addColorStop(0, color);\n        gradient.addColorStop(1, transparentColor);\n        ctx.fillStyle = gradient;\n        ctx.globalCompositeOperation = 'screen';\n        ctx.fill();\n        ctx.restore();\n      }\n    }\n\n    // Create nebula clouds - reduced size and quantity\n    const nebulaClouds = [];\n\n    // Different sizes and colors of nebula clouds with reduced saturation\n    const colors = ['hsl(280, 80%, 60%)',\n    // Purple\n    'hsl(200, 80%, 60%)',\n    // Blue\n    'hsl(170, 80%, 60%)',\n    // Teal\n    'hsl(350, 80%, 60%)',\n    // Pink\n    'hsl(30, 80%, 60%)' // Orange\n    ];\n\n    // Large background clouds - further reduced size and quantity\n    for (let i = 0; i < 3; i++) {\n      nebulaClouds.push(new NebulaCloud(Math.random() * width, Math.random() * height, Math.random() * 100 + 40,\n      // Reduced size\n      colors[Math.floor(Math.random() * colors.length)], Math.random() * 0.2 + 0.1));\n    }\n\n    // Medium clouds - reduced quantity\n    for (let i = 0; i < 6; i++) {\n      nebulaClouds.push(new NebulaCloud(Math.random() * width, Math.random() * height, Math.random() * 60 + 20,\n      // Reduced size\n      colors[Math.floor(Math.random() * colors.length)], Math.random() * 0.3 + 0.2));\n    }\n\n    // Small detail clouds\n    for (let i = 0; i < 10; i++) {\n      nebulaClouds.push(new NebulaCloud(Math.random() * width, Math.random() * height, Math.random() * 30 + 10,\n      // Reduced size\n      colors[Math.floor(Math.random() * colors.length)], Math.random() * 0.4 + 0.3));\n    }\n\n    // Animation loop\n    const animate = () => {\n      // Clear with fade effect instead of complete clear\n      ctx.fillStyle = 'rgba(0, 0, 0, 0.05)';\n      ctx.fillRect(0, 0, width, height);\n\n      // Update and draw nebula clouds\n      nebulaClouds.forEach(cloud => {\n        cloud.update(mousePosition.current.x, mousePosition.current.y);\n        cloud.draw(ctx);\n      });\n      animationFrameId.current = requestAnimationFrame(animate);\n    };\n    animate();\n\n    // Handle window resize\n    const handleResize = () => {\n      width = window.innerWidth;\n      height = window.innerHeight;\n      canvas.width = width;\n      canvas.height = height;\n    };\n\n    // Track mouse position\n    const handleMouseMove = e => {\n      mousePosition.current = {\n        x: e.clientX,\n        y: e.clientY\n      };\n    };\n    window.addEventListener('resize', handleResize);\n    window.addEventListener('mousemove', handleMouseMove);\n\n    // Cleanup\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      window.removeEventListener('mousemove', handleMouseMove);\n      cancelAnimationFrame(animationFrameId.current);\n    };\n  }, [isHomePage]);\n  if (!isHomePage) return null; // Don't render on other pages\n\n  return /*#__PURE__*/_jsxDEV(CanvasContainer, {\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 235,\n    columnNumber: 5\n  }, this);\n};\n_s(NebulaEffect, \"RwCVSjSxagcVZX1BfoZSlbts7M0=\");\n_c2 = NebulaEffect;\nexport default NebulaEffect;\nvar _c, _c2;\n$RefreshReg$(_c, \"CanvasContainer\");\n$RefreshReg$(_c2, \"NebulaEffect\");","map":{"version":3,"names":["React","useEffect","useRef","styled","jsxDEV","_jsxDEV","CanvasContainer","div","_c","NebulaEffect","pathname","_s","isHomePage","canvasRef","animationFrameId","mousePosition","x","y","canvas","current","ctx","getContext","width","window","innerWidth","height","innerHeight","NebulaCloud","constructor","radius","color","speed","baseRadius","angle","Math","random","PI","noiseOffset","noiseSpeed","opacity","pulseSpeed","pulsePhase","distortionAmount","distortionSpeed","distortionPhase","hue","parseInt","split","hueShift","hueDirection","update","mouseX","mouseY","cos","sin","pulseFactor","dx","dy","distance","sqrt","force","draw","save","beginPath","i","distortedRadius","moveTo","lineTo","closePath","gradient","createRadialGradient","transparentColor","addColorStop","fillStyle","globalCompositeOperation","fill","restore","nebulaClouds","colors","push","floor","length","animate","fillRect","forEach","cloud","requestAnimationFrame","handleResize","handleMouseMove","e","clientX","clientY","addEventListener","removeEventListener","cancelAnimationFrame","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/Users/brendanlo/Documents/GitHub/gns-astronomy/src/components/NebulaEffect.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport styled from 'styled-components';\n\nconst CanvasContainer = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  z-index: -3;\n`;\n\nconst NebulaEffect = ({ pathname }) => {\n  // Only show on home page\n  const isHomePage = pathname === '/' || !pathname;\n  \n  const canvasRef = useRef(null);\n  const animationFrameId = useRef(null);\n  const mousePosition = useRef({ x: 0, y: 0 });\n\n  useEffect(() => {\n    if (!isHomePage) return; // Don't run effect on other pages\n    \n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    let width = window.innerWidth;\n    let height = window.innerHeight;\n\n    // Set canvas dimensions\n    canvas.width = width;\n    canvas.height = height;\n\n    // Nebula cloud class - reverted to triangular shape but with reduced brightness\n    class NebulaCloud {\n      constructor(x, y, radius, color, speed) {\n        this.x = x;\n        this.y = y;\n        this.radius = radius;\n        this.baseRadius = radius;\n        this.color = color;\n        this.speed = speed;\n        this.angle = Math.random() * Math.PI * 2;\n        this.noiseOffset = Math.random() * 1000;\n        this.noiseSpeed = Math.random() * 0.005 + 0.001;\n        this.opacity = Math.random() * 0.08 + 0.02; // Further reduced opacity\n        this.pulseSpeed = Math.random() * 0.02 + 0.01;\n        this.pulsePhase = Math.random() * Math.PI * 2;\n        // Restored distortion properties but with reduced values\n        this.distortionAmount = Math.random() * 10 + 5; // Reduced from 20+10\n        this.distortionSpeed = Math.random() * 0.01 + 0.005;\n        this.distortionPhase = Math.random() * Math.PI * 2;\n        this.hue = parseInt(color.split('(')[1].split(',')[0]);\n        this.hueShift = Math.random() * 0.5 + 0.1;\n        this.hueDirection = Math.random() > 0.5 ? 1 : -1;\n      }\n\n      update(mouseX, mouseY) {\n        // Subtle movement\n        this.x += Math.cos(this.angle) * this.speed;\n        this.y += Math.sin(this.angle) * this.speed;\n        \n        // Change direction with noise\n        this.noiseOffset += this.noiseSpeed;\n        this.angle += Math.sin(this.noiseOffset) * 0.05;\n        \n        // Keep within bounds\n        if (this.x < -this.radius) this.x = width + this.radius;\n        if (this.x > width + this.radius) this.x = -this.radius;\n        if (this.y < -this.radius) this.y = height + this.radius;\n        if (this.y > height + this.radius) this.y = -this.radius;\n        \n        // Pulse effect\n        this.pulsePhase += this.pulseSpeed;\n        const pulseFactor = 0.5 + Math.sin(this.pulsePhase) * 0.5;\n        this.radius = this.baseRadius * (0.8 + pulseFactor * 0.4);\n        this.opacity = (Math.random() * 0.02 + 0.02) + pulseFactor * 0.04; // Further reduced opacity\n        \n        // Distortion phase\n        this.distortionPhase += this.distortionSpeed;\n        \n        // Color shifting\n        this.hue += this.hueShift * this.hueDirection;\n        if (this.hue > 360) this.hue = 0;\n        if (this.hue < 0) this.hue = 360;\n        \n        // Mouse interaction - gentle attraction\n        if (mouseX && mouseY) {\n          const dx = mouseX - this.x;\n          const dy = mouseY - this.y;\n          const distance = Math.sqrt(dx * dx + dy * dy);\n          \n          if (distance < 300) {\n            const force = (300 - distance) / 10000;\n            this.x += dx * force;\n            this.y += dy * force;\n          }\n        }\n      }\n\n      draw(ctx) {\n        ctx.save();\n        \n        // Create distorted shape (triangular with rounded corners)\n        ctx.beginPath();\n        \n        for (let i = 0; i < 20; i++) {\n          const angle = (i / 20) * Math.PI * 2;\n          const distortedRadius = this.radius + Math.sin(angle * 3 + this.distortionPhase) * this.distortionAmount;\n          \n          const x = this.x + Math.cos(angle) * distortedRadius;\n          const y = this.y + Math.sin(angle) * distortedRadius;\n          \n          if (i === 0) {\n            ctx.moveTo(x, y);\n          } else {\n            ctx.lineTo(x, y);\n          }\n        }\n        \n        ctx.closePath();\n        \n        // Create gradient with reduced brightness\n        const gradient = ctx.createRadialGradient(\n          this.x, this.y, 0,\n          this.x, this.y, this.radius * 1.5\n        );\n        \n        // Reduced saturation and lightness for better text readability\n        const color = `hsla(${this.hue}, 80%, 60%, ${this.opacity})`;\n        const transparentColor = `hsla(${this.hue}, 80%, 60%, 0)`;\n        \n        gradient.addColorStop(0, color);\n        gradient.addColorStop(1, transparentColor);\n        \n        ctx.fillStyle = gradient;\n        ctx.globalCompositeOperation = 'screen';\n        ctx.fill();\n        \n        ctx.restore();\n      }\n    }\n\n    // Create nebula clouds - reduced size and quantity\n    const nebulaClouds = [];\n    \n    // Different sizes and colors of nebula clouds with reduced saturation\n    const colors = [\n      'hsl(280, 80%, 60%)', // Purple\n      'hsl(200, 80%, 60%)', // Blue\n      'hsl(170, 80%, 60%)', // Teal\n      'hsl(350, 80%, 60%)', // Pink\n      'hsl(30, 80%, 60%)',  // Orange\n    ];\n    \n    // Large background clouds - further reduced size and quantity\n    for (let i = 0; i < 3; i++) {\n      nebulaClouds.push(new NebulaCloud(\n        Math.random() * width,\n        Math.random() * height,\n        Math.random() * 100 + 40, // Reduced size\n        colors[Math.floor(Math.random() * colors.length)],\n        Math.random() * 0.2 + 0.1\n      ));\n    }\n    \n    // Medium clouds - reduced quantity\n    for (let i = 0; i < 6; i++) {\n      nebulaClouds.push(new NebulaCloud(\n        Math.random() * width,\n        Math.random() * height,\n        Math.random() * 60 + 20, // Reduced size\n        colors[Math.floor(Math.random() * colors.length)],\n        Math.random() * 0.3 + 0.2\n      ));\n    }\n    \n    // Small detail clouds\n    for (let i = 0; i < 10; i++) {\n      nebulaClouds.push(new NebulaCloud(\n        Math.random() * width,\n        Math.random() * height,\n        Math.random() * 30 + 10, // Reduced size\n        colors[Math.floor(Math.random() * colors.length)],\n        Math.random() * 0.4 + 0.3\n      ));\n    }\n\n    // Animation loop\n    const animate = () => {\n      // Clear with fade effect instead of complete clear\n      ctx.fillStyle = 'rgba(0, 0, 0, 0.05)';\n      ctx.fillRect(0, 0, width, height);\n      \n      // Update and draw nebula clouds\n      nebulaClouds.forEach(cloud => {\n        cloud.update(mousePosition.current.x, mousePosition.current.y);\n        cloud.draw(ctx);\n      });\n      \n      animationFrameId.current = requestAnimationFrame(animate);\n    };\n    \n    animate();\n\n    // Handle window resize\n    const handleResize = () => {\n      width = window.innerWidth;\n      height = window.innerHeight;\n      canvas.width = width;\n      canvas.height = height;\n    };\n\n    // Track mouse position\n    const handleMouseMove = (e) => {\n      mousePosition.current = {\n        x: e.clientX,\n        y: e.clientY\n      };\n    };\n\n    window.addEventListener('resize', handleResize);\n    window.addEventListener('mousemove', handleMouseMove);\n\n    // Cleanup\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      window.removeEventListener('mousemove', handleMouseMove);\n      cancelAnimationFrame(animationFrameId.current);\n    };\n  }, [isHomePage]);\n\n  if (!isHomePage) return null; // Don't render on other pages\n\n  return (\n    <CanvasContainer>\n      <canvas ref={canvasRef} />\n    </CanvasContainer>\n  );\n};\n\nexport default NebulaEffect;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}